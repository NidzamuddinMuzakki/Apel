{"version":3,"sources":["App.js","i18n.js","reportWebVitals.js","index.js","Redux/Filter/Store.js","Redux/Table/Store.js","Redux/Profile/Store.js","Redux/Login/maxLoginAttempt.js"],"names":["loading","className","DefaultLayout","Loadable","loader","Login","Module","Page404","Page500","App","exact","path","name","component","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","detection","order","cache","interpolation","escapeValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","createStore","combineReducers","ChangeFilterRedux","state","action","type","stateuser","payload","data","SelectedRowPage","Paging","SelectedRow","LoveMenu","ColorTheme","Param","LoginAttempt","RoleSelected","ModuleSelected","BranchSelected","PeriodSelected","DateSelected","BranchData","MenuData","DateData","UserData","RoleData","PeriodData","UserSetting","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.d87a3a38.chunk.js","sourcesContent":["import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport Loadable from 'react-loadable';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = Loadable({\n  loader: () => import('./containers/DefaultLayout.js'),\n  loading\n});\n\n// Pages\nconst Login = Loadable({\n  loader: () => import('./views/Credential/Login'),\n  loading\n});\nconst Module = Loadable({\n  loader: () => import('./views/Module'),\n  loading\n});\n\n\nconst Page404 = Loadable({\n  loader: () => import('./views/Credential/Page404.js'),\n  loading\n});\n\nconst Page500 = Loadable({\n  loader: () => import('./views/Credential/Page500.js'),\n  loading\n});\n\n\n\n\nconst App = ()=>{\n\n  \n  \n    return (\n      <HashRouter>\n          <Switch>\n            <Route  exact path=\"/Login\" name=\"Login Page\" component={Login} />\n            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\n            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\n            <Route exact path=\"/module\" name=\"Module Page\" component={Module} /> \n            <Route path=\"/\" name=\"Home\" component={DefaultLayout} /> \n          </Switch>\n      </HashRouter>\n    );\n  \n}\n\nexport default App;\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    detection:{\r\n        order:['queryString','cookie'],\r\n        cache:['cookie']\r\n    },\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.scss';\nimport './style/global.css'\nimport './style/FloatLoading.css'\nimport './style/tailwind.css'\nimport './style/bootstrap.css'\nimport './style/Capthca.css'\nimport './style/PopCap.css'\nimport './style/Module.css'\nimport './style/CustomCheckbox.css'\nimport './style/CustomCalender.css'\nimport './style/Header.css'\n\nimport './style/Corousel.css'\nimport './i18n';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers} from 'redux';\nimport {LoginAttempt} from './Redux/Login/maxLoginAttempt'\nimport {SelectedRow, Paging, SelectedRowPage} from './Redux/Table/Store'\nimport { ChangeFilterRedux} from './Redux/Filter/Store'\nimport {LoveMenu,ColorTheme,Param,RoleSelected,ModuleSelected,BranchSelected,PeriodSelected,DateSelected,BranchData,MenuData,DateData,UserData, RoleData,PeriodData,UserSetting  } from \"./Redux/Profile/Store\";\nconst rootReducer =createStore(combineReducers({\n  ChangeFilterRedux,SelectedRowPage,Paging,SelectedRow,LoveMenu,ColorTheme,Param,LoginAttempt,RoleSelected,ModuleSelected,BranchSelected,PeriodSelected,DateSelected,BranchData,MenuData,DateData,UserData, RoleData,PeriodData,UserSetting\n  \n}),window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(\n  \n  <Provider store={rootReducer}><App /></Provider>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function ChangeFilterRedux(state = '', action){\r\n    switch(action.type){\r\n        case \"FilterRedux\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n       default:\r\n           return state  \r\n        }\r\n    }\r\nexport { ChangeFilterRedux}   ","function SelectedRow(state = [], action){\r\n    switch(action.type){\r\n        case \"SelectedRow\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n       default:\r\n           return state  \r\n        }\r\n    }\r\nfunction Paging(state = 0, action){\r\n    switch(action.type){\r\n        case \"PagingTable\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction SelectedRowPage(state = 0, action){\r\n    switch(action.type){\r\n        case \"RowPageTable\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }         \r\n\r\n\r\nexport {SelectedRow, Paging,SelectedRowPage}    ","function RoleData(state = '', action){\r\n    switch(action.type){\r\n        case \"RoleData\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n       default:\r\n           return state  \r\n        }\r\n    }\r\nfunction MenuData(state = '', action){\r\n    switch(action.type){\r\n        case \"MenuData\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }    \r\nfunction BranchData(state = '', action){\r\n    switch(action.type){\r\n        case \"BranchData\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction DateData(state = '', action){\r\n    switch(action.type){\r\n        case \"DateData\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    } \r\nfunction PeriodData(state = '', action){\r\n    switch(action.type){\r\n        case \"PeriodData\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction UserData(state = '', action){\r\n    switch(action.type){\r\n        case \"UserData\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }        \r\nfunction UserSetting(state = '', action){\r\n    switch(action.type){\r\n        case \"UserSetting\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction RoleSelected(state = '', action){\r\n    switch(action.type){\r\n        case \"RoleSelected\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction ModuleSelected(state = '', action){\r\n    switch(action.type){\r\n        case \"ModuleSelected\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction BranchSelected(state = '', action){\r\n    switch(action.type){\r\n        case \"BranchSelected\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction PeriodSelected(state = '', action){\r\n    switch(action.type){\r\n        case \"PeriodSelected\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction DateSelected(state = '', action){\r\n    switch(action.type){\r\n        case \"DateSelected\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction Param(state = '', action){\r\n    switch(action.type){\r\n        case \"Param\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    \r\n    }\r\nfunction ColorTheme(state = '', action){\r\n    switch(action.type){\r\n        case \"ColorTheme\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }\r\nfunction LoveMenu(state = false, action){\r\n    switch(action.type){\r\n        case \"LoveMenu\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.data;\r\n            }\r\n            return stateuser\r\n        default:\r\n            return state  \r\n        }\r\n    }                                     \r\nexport {LoveMenu,ColorTheme,Param,RoleSelected,ModuleSelected,BranchSelected,PeriodSelected,DateSelected ,RoleData, MenuData, PeriodData, UserData,UserSetting,BranchData,DateData};  ","function LoginAttempt(state = 0, action){\r\n    switch(action.type){\r\n        case \"LoginAttempt\":\r\n            let stateuser = state\r\n            if(action.payload){\r\n                stateuser = action.payload.LoginAttempt;\r\n            }\r\n            return stateuser\r\n       default:\r\n           return state  \r\n        }\r\n    }\r\n\r\nexport {LoginAttempt};  "],"sourceRoot":""}